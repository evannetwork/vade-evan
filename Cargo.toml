[package]
name = "vade-evan"
version = "0.6.0-rc.6"
authors = ["evan GmbH"]
edition = "2018"
license-file = "LICENSE.txt"
description = "zero-knowledge-proof VC and TnT DID handling for vade"
homepage = "https://github.com/evannetwork/vade-evan"
documentation = "https://docs.rs/crate/vade-evan"
repository = "https://github.com/evannetwork/vade-evan"
readme = "README.md"
keywords = ["did", "ssi", "vc", "zkp"]
build = "build.rs"

[lib]
name = "vade_evan"
path = "src/lib.rs"
crate-type = ["cdylib", "rlib", "staticlib"]

[[bin]]
name = "vade_evan_cli"
path = "src/main.rs"
required-features = ["target-cli"]

[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-Oz", "--enable-mutable-globals"]

[features]
default = ["did-sidetree", "did-substrate", "didcomm", "jwt-vc", "vc-zkp-bbs", "target-cli"]

did-sidetree = ["base64", "did-read", "did-write", "vade-sidetree", "uuid"]

did-substrate = ["did-read", "did-write", "signer", "vade-evan-substrate"]

didcomm = ["vade-didcomm"]

jwt-vc = ["vc-zkp", "signer", "vade-jwt-vc"]

signer = ["vade-signer"]

vc-zkp-bbs = ["base64", "bbs", "vc-zkp", "flate2", "signer", "regex", "ssi", "vade-evan-bbs"]

# build for cli to interact with vade plugins with commands
cli  = ["anyhow", "clap", "tokio", "vade-didcomm/portable"]

# enable support for using the `c_lib` module to process requests
c-lib = ["tokio", "vade-didcomm/portable"]

# enable did resolve in targets
did-read = []

# enable did create and update in targets
did-write = []

# enable vc related functiosn in targets
vc-zkp = []

# build for sdk integration with request list
target-c-sdk = ["c-lib", "vade-sidetree/sdk", "didcomm", "did-sidetree", "did-substrate", "jwt-vc", "vc-zkp-bbs"]

# build for consuming vade-evan from C
target-c-lib = ["c-lib", "default"]

# build for command line usage
target-cli = ["cli"]

# build for consuming vade-evan from Java
target-java-lib = ["c-lib", "default"]

# build for usage in wasm
target-wasm = ["vade-didcomm/wasm", "didcomm", "vade-evan-bbs/wasm", "did-sidetree", "did-substrate", "jwt-vc", "vc-zkp-bbs"]

############################################################################### generic dependencies
[dependencies]
async-trait = "0.1.31"
cfg-if = "0.1"
jni = "0.19.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0.53", features = ["preserve_order", "raw_value"] }
thiserror = "1.0.38"
vade = "0.1.1"
chrono = "0.4.23"

###################################################################### feature specific dependencies
# did-sidetree
[dependencies.uuid]
version = "0.8.2"
optional = true
features = ["v4"]

[dependencies.vade-sidetree]
git = "https://github.com/evannetwork/vade-sidetree.git"
branch = "develop"
version = "0.0.4"
optional = true

# did-substrate
[dependencies.vade-evan-substrate]
git = "https://github.com/evannetwork/vade-evan-substrate.git"
branch = "develop"
optional = true

# didcomm
[dependencies.vade-didcomm]
git = "https://github.com/evannetwork/vade-didcomm.git"
branch = "develop"
optional = true

# jwt-vc
[dependencies.vade-jwt-vc]
git = "https://github.com/evannetwork/vade-jwt-vc.git"
branch = "develop"
optional = true

# signer
[dependencies.vade-signer]
git = "https://github.com/evannetwork/vade-signer.git"
branch = "develop"
optional = true

# universal-resolver
[dependencies.vade-universal-resolver]
version = "0.0.4"
optional = true

# vc-zkp-bbs
[dependencies.base64]
version = "0.13.0"
optional = true

[dependencies.bbs]
version = "0.4.1"
optional = true
default-features= false

[dependencies.flate2]
version = "1.0.20"
optional = true

[dependencies.regex]
version = "1"
optional = true

[dependencies.ssi]
version = "0.5.0"
optional = true

[dependencies.vade-evan-bbs]
git = "https://github.com/evannetwork/vade-evan-bbs.git"
branch = "develop"
optional = true
default-features = false

# target-cli
[dependencies.anyhow]
version = "1.0.68"
optional = true

[dependencies.clap]
version = "2.33.1"
optional = true

[dependencies.tokio]
version = "=1.29.1"
optional = true
features = ["rt-multi-thread", "macros", "net", "time"]

####################################################################### target specific dependencies
[target.'cfg(any(target_arch = "x86_64-unknown-linux-gnu", target_arch = "x86_64-apple-darwin", target_arch = "aarch64-apple-darwin", target_arch = "x86_64-pc-windows-msvc"))'.dependencies]
openssl = { version = "*", features = ["vendored"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1.6"
console_log = { version = "0.2", features = ["color"] }
getrandom = { version = "0.1", features = ["wasm-bindgen"] } # requited for wasm compatible random calls
log = "0.4.17"
serde_derive = "1.0.114"
serde-wasm-bindgen = "0.4.5"
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.5"

############################################################################ generic dev dependencies
[dev-dependencies]
anyhow = "1.0.68"
serial_test = "0.5.1"
tokio = { version = "=1.29.1", features = ["macros", "rt-multi-thread"] }

################################################################### target specific dev dependencies
[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3.12"

################################################################################# build dependencies
[build-dependencies]
serde = "1.0"
serde_derive = "1.0.114"
toml = "0.5.10"
