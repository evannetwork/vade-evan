[package]
name = "vade-evan"
version = "0.0.1"
authors = [
    "Sebastian Wolfram <sebastian.wolfram@evan.team>",
    "Sebastian Dechant <sebastian.dechant@evan.team>",
    "Philip Kaiser <philip.kaiser@evan.team>",
]
edition = "2018"

[lib]
name = "vade_evan"
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "vade_evan_cli"
path = "src/main.rs"
required-features = ["cli"]

[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-Oz", "--enable-mutable-globals"]

[features]
default = ["did", "native", "vc-zkp"]

# add command line interface; not compatible with `wasm` feature
cli = [
    "clap",
    "did",
    "tokio",
    "vc-zkp",
]

# enables using DIDs, also required for some vc-zkp functions
did = [
    "blake2-rfc",
    "byteorder",
    "futures",
    "parity_scale_codec",
    "regex",
    "sp-core",
    "sp-runtime-interface",
    "sp-std",
    "sp-storage",
    "thiserror",
    "twox-hash",
    "ws",
    "web-sys",
]

# build to run native-ly (non-wasm); not compatible with `wasm` feature
native = [
    "ursa/portable_native",
]

# enables zero knowledge VC support
vc-zkp = [
    "data-encoding",
    "ursa",
    "wasm-timer",
]

# build to run as wasm file; not compatible with `native` feature
wasm = [
    "ursa/portable_wasm",
]

[dependencies]
# shared
async-trait = "0.1.31"
env_logger = "0.7.1"
hex = "0.4.2"
libsecp256k1 = "0.3.5"
log = "0.4.8"
reqwest = { version = "0.10.4", default-features= false, features = ["json", "rustls-tls"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0.53", features = ["preserve_order", "raw_value"] }
sha2 = "0.8.1"
sha3 = "0.8.2"
tokio = { version = "0.2.22", optional = true }
uuid = { version = "0.8.1", features = ["serde", "v4", "wasm-bindgen"] }
# vade = { path = "../vade", version = "0.0.7" }
vade = { git = "https://github.com/evannetwork/vade", branch = "develop" }
# cli
clap = { version = "2.33.1", optional = true }
# did
blake2-rfc = { version = "0.2.18", optional = true }
byteorder = { version = "1.3.4", optional = true }
futures = { version = "0.3.5", optional = true }
parity_scale_codec = { package ="parity-scale-codec", version = "1.3.0", optional = true }
regex = { version = "1.3.7", optional = true }
sp-core = { version = "2.0.0-rc4", default-features = false, optional = true }
sp-runtime-interface = { version = "2.0.0-rc4", default-features = false, features = ["disable_target_static_assertions" ], optional = true}
sp-std = { version = "2.0.0-rc4", default-features = false, optional = true }
sp-storage = { version = "2.0.0-rc4", default-features = false, optional = true }
thiserror = { version = "1.0", optional = true }
twox-hash = { version = "1.5.0", optional = true }
# vc-zkp
data-encoding = { version = "2.2.0", optional = true }
# we need to compile ursa manually because the latest published crate (0.3.2) does not support wasm yet
# ursa = "0.3.2"
# ursa = { path = "./../ursa/libursa", default-features = false, optional = true }
ursa = { git = "https://github.com/evannetwork/ursa", default-features = false, optional = true }
rand = "0.7.3"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# shared
chrono = { version = "0.4.11",  default-features = false, features=["wasm-bindgen", "clock", "js-sys"] }
# vc-zkp
ws = { version = "0.7", features = [], optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
# shared
console_error_panic_hook = "0.1.6"
console_log = { version = "0.2", features = ["color"] }
js-sys = { version = "0.3" }
serde_derive = "1.0.114"
wasm-bindgen = { version = "0.2",features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.5"
# did
web-sys = { version = "0.3.39", features = [
    'WebSocket',
    'Response',
    'EventTarget',
    'Event',
    'MessageEvent',
	'ErrorEvent',
    'console'
], optional = true }
# vc-zkp
wasm-timer = { version = "0.2.4", optional = true }

[dev-dependencies]
tokio = { version = "0.2.21", features = ["macros", "rt-threaded"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3.12"
